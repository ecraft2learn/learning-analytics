outlier={mean:null,covMatrix:null,num_rows:0,num_cols:0,testValx:null,probs:[],initclassifier:function(r){var t=r.dimensions()
outlier.num_rows=t.rows,outlier.num_cols=t.cols,outlier.mean=outlier.findMean(r),outlier.covMatrix=outlier.findCovarianceMatrix(r)},findMean:function(r){for(var t=Vector.Zero(outlier.num_cols),e=1;e<=outlier.num_rows;e++){var o=r.row(e)
t=t.add(o)}return t.x(1/outlier.num_rows)},convertVectorToMatrix:function(r){for(var t=[],e=1;e<=outlier.num_rows;e++)t.push(r.elements)
return $M(t)},findCovarianceMatrix:function(r){var t=outlier.convertVectorToMatrix(outlier.mean),e=r.subtract(t)
return e.transpose().x(e)},trainClassifer:function(r){outlier.initclassifier(r)},trainClassiferWithParameters:function(r,t){var e=r.dimensions()
outlier.num_cols=e,outlier.mean=r,outlier.covMatrix=t},getprobabValue:function(r){outlier.testValx=r
var t=outlier.mean,e=outlier.covMatrix,o=Math.pow(2*Math.PI,outlier.num_cols/2),i=Math.pow(e.det(),.5),n=outlier.testValx.subtract(t),u=$M(n),a=u.transpose(),l=e.inverse()
l||(l=e)
var s=a.x(l)
return s=s.x(u),s=s.elements[0][0],s*=-.5,s=Math.exp(s),1/(o*i)*s},checkIfOutlier:function(r,t){t||(t=5e-4)
var e=outlier.getprobabValue(r)
outlier.probs.push(e),outlier.prob=e
var o=!1
return e<t&&(o=!0),o}}
