outlier={mean:null,covMatrix:null,num_rows:0,num_cols:0,testValx:null,probs:[],initclassifier:function(a){var b=a.dimensions();outlier.num_rows=b.rows;outlier.num_cols=b.cols;outlier.mean=outlier.findMean(a);outlier.covMatrix=outlier.findCovarianceMatrix(a)},findMean:function(e){var a=Vector.Zero(outlier.num_cols);for(var d=1;d<=outlier.num_rows;d++){var c=e.row(d);a=a.add(c)}var b=a.x(1/outlier.num_rows);return b},convertVectorToMatrix:function(c){var a=[];for(var b=1;b<=outlier.num_rows;b++){a.push(c.elements)}return $M(a)},findCovarianceMatrix:function(c){var e=outlier.convertVectorToMatrix(outlier.mean);var d=c.subtract(e);var b=d.transpose();var a=b.x(d);return a},trainClassifer:function(a){outlier.initclassifier(a)},trainClassiferWithParameters:function(a,b){var c=a.dimensions();outlier.num_cols=c;outlier.mean=a;outlier.covMatrix=b},getprobabValue:function(a){outlier.testValx=a;var k=outlier.mean;var j=outlier.covMatrix;var g=Math.pow((2*Math.PI),(outlier.num_cols/2));var e=Math.pow(j.det(),0.5);var b=outlier.testValx.subtract(k);var f=$M(b);var h=f.transpose();var i=j.inverse();if(!i){i=j}var d=h.x(i);d=d.x(f);d=d.elements[0][0];d=-1*0.5*d;d=Math.exp(d);var c=(1/(g*e))*d;return c},checkIfOutlier:function(d,b){if(!b){b=0.0005}var c=outlier.getprobabValue(d);outlier.probs.push(c);outlier.prob=c;var a=false;if(c<b){a=true}return a}};