"use strict";var NNTFunctions=NNTFunctions||{};NNTFunctions.util={assert:function(b,a){if(!b){throw a||"Assertation failed"}},getOption:function(b,a,c){if("undefined"===typeof b){return c}return"undefined"!==typeof b[a]?b[a]:c},convertRange:function(f,d,c){var b=[];for(var e=0,a=f.length;e<a;e++){b.push((f[e]-d[0])*(c[1]-c[0])/(d[1]-d[0])+c[0])}return b},similarity:function(c,b){NNTFunctions.util.assert(c.length===b.length,"Array lengths do not match");var e=0;for(var a=0;a<c.length;a++){e+=(c[a]-b[a])*(c[a]-b[a])}e=Math.sqrt(e);return(1/(1+e))},random:function(b,a){return Math.random()*(a-b)+b},randArr:function(g,h,f,b){var a=[];for(var e=0;e<g;e++){var d=[];for(var c=0;c<h;c++){d.push(NNTFunctions.util.random(f,b))}a.push(d)}return a}};NNTFunctions.NNTNode=function(a){this.point=a,this.parent=null,this.left=null,this.right=null,this.index=-1,this.isTerminal=false};NNTFunctions.NeuralNTree=function(b){this.rootNode=null,this.alpha=NNTFunctions.util.getOption(b,"learningRate",0.01),this.terminals={},this.index=0,this.min=NNTFunctions.util.getOption(b,"scaleMin",-1),this.max=NNTFunctions.util.getOption(b,"scaleMax",1),this.size=NNTFunctions.util.getOption(b,"size",1000),this.merge=NNTFunctions.util.getOption(b,"merge",8);this.dimensions=NNTFunctions.util.getOption(b,"dimensions",3);this.nodes=[];var a=NNTFunctions.util.randArr(this.size,this.dimensions,this.min,this.max);this.initTree(a);this.postOrder(this.rootNode)};NNTFunctions.NeuralNTree.prototype.setMerge=function(a){this.merge=Math.log2(a)-1};NNTFunctions.NeuralNTree.prototype.postOrder=function(b){if(null!==b&&"undefined"!==typeof b){this.postOrder(b.left);this.postOrder(b.right);var a=this.index;b.index=a;this.nodes[a]=b;this.index++;if(b.isTerminal){this.terminals[a]=b}}};NNTFunctions.NeuralNTree.prototype.initTree=function(a){return this._initTree(a,0,a.length-1)};NNTFunctions.NeuralNTree.prototype._initTree=function(b,d,a){if(d>a){return null}var c=Math.round((d+a)/2),e=new NNTFunctions.NNTNode(b[c]);if(null===this.rootNode){this.rootNode=e}e.left=this._initTree(b,d,c-1);if(null!==e.left){e.left.parent=e}e.right=this._initTree(b,c+1,a);if(null!==e.right){e.right.parent=e}if(null===e.left&&null===e.right){e.isTerminal=true}return e};NNTFunctions.NeuralNTree.prototype.backwardTrain=function(a){var c=null;for(var b in this.terminals){if(null===c){c=this.terminals[b]}var d=NNTFunctions.util.similarity(a,c.point),e=NNTFunctions.util.similarity(a,this.terminals[b].point);if(d>e){c=this.terminals[b]}}while(this.rootNode!==c){this.levelUpdate(c,a);c=c.parent}};NNTFunctions.NeuralNTree.prototype.levelOrder=function(c){var a=[];if(null===c){return a}var d=[];d.push(c);while(d.length>0){var f=[],g=[];while(d.length>0){c=d.shift();g.push(c);var e=c.left,b=c.right;if(null!==e){f.push(e)}if(null!==b){f.push(b)}}a.push(g);d=f}return a};NNTFunctions.NeuralNTree.prototype.toJSON=function(){var a=[];this.__toJSON(this.rootNode,a);var b=a.pop();return b};NNTFunctions.NeuralNTree.prototype.getHeight=function(a){if(!a){return -1}return 1+Math.max(this.getHeight(a.left),this.getHeight(a.right))};NNTFunctions.NeuralNTree.prototype.__toJSON=function(a,b){if(a){var c={};c.id=a.index+"_";c.children=[];c.name=a.point.join(", ");c.data={};b.push(c);this.__toJSON(a.left,c.children);this.__toJSON(a.right,c.children)}};NNTFunctions.NeuralNTree.prototype.levelUpdate=function(b,l){var m=this.levelOrder(b),h=m.length;for(var f=0,g=m.length;f<g;f++){for(var e=0,d=m[f].length;e<d;e++){if(null!==m[f][e]){for(var c=0,a=m[f][e].point.length;c<a;c++){m[f][e].point[c]=this.update(m[f][e].point[c],l[c],((f+1)/(h+1)))}}}}};NNTFunctions.NeuralNTree.prototype.update=function(c,b,a){var d=c+this.alpha*(1/a)*(b-c);return d};NNTFunctions.NeuralNTree.prototype.cluster=function(a){var d=this.rootNode;while(!d.isTerminal){if(null!==d.left&&null!==d.right){var c=NNTFunctions.util.similarity(a,d.left.point),b=NNTFunctions.util.similarity(a,d.right.point);if(c>=b){d=d.left}else{d=d.right}}else{if(null===d.left&&null!==d.right){d=d.right}else{d=d.left}}}return d};NNTFunctions.NeuralNTree.prototype.forwardTrain=function(a){var d=this.rootNode;while(null!==d){if(null!==d.left&&null!==d.right){var c=NNTFunctions.util.similarity(a,d.left.point),b=NNTFunctions.util.similarity(a,d.right.point);if(c>=b){d=d.left}else{d=d.right}this.levelUpdate(d,a)}else{if(null!==d.left&&null===d.right){d=d.left}else{d=d.right}}}};NNTFunctions.NeuralNTree.prototype.mergeClusters=function(){var f=this.levelOrder(this.rootNode);for(var e=0;e<f[this.merge].length;e++){var d=this.levelOrder(f[this.merge][e]);var c=d[0][0].index;for(var b=1;b<d.length;b++){for(var a=0;a<d[b].length;a++){if(d[b][a]){d[b][a].mergeIndex=c}}}}f=this.levelOrder(this.rootNode)};NNTFunctions.NeuralNTree.prototype.nodesByIndex=function(a){return this.nodes[a]};